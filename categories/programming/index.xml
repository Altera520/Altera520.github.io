<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Programming - Category - Juneee blog</title><link>https://altera520.github.io/categories/programming/</link><description>Programming - Category - Juneee blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 17 Feb 2021 20:22:31 +0900</lastBuildDate><atom:link href="https://altera520.github.io/categories/programming/" rel="self" type="application/rss+xml"/><item><title>[Java8의 변경사항] 1. 특징 및 람다 표현식</title><link>https://altera520.github.io/posts/2021-02-17-java8-features-1st/</link><pubDate>Wed, 17 Feb 2021 20:22:31 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2021-02-17-java8-features-1st/</guid><description>Java8의 특징 자바 8은 2014년 3월에 출시된 LTS 버전이며 제공하는 주요기능은 다음과 같다.
람다 표현식: 함수형 프로그래밍 Stream API: 시퀀셜한 데이터의 추상화된 사용 java.time 패키지: 개선된 Date, Time API 제공 나즈혼(Nashorn): 자바스크립트의 새로운 엔진 도입 LTS(Long-Term-Support) 버전 LTS 버전 배포 주기는 3년이며 지원기간은 5년이상으로서 production환경에서는 LTS 버전을 권장한다.</description></item><item><title>JVM 구조</title><link>https://altera520.github.io/posts/2021-01-12-jvm/</link><pubDate>Tue, 12 Jan 2021 18:47:35 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2021-01-12-jvm/</guid><description>JVM 정의 javac를 통해 생성된 Byte Code를 OS에 맞게 해석하여 실행시켜주는 역할을 수행한다. JVM은 크게 봤을 때 5개의 컴포넌트로 나뉜다.
Class Loader Execution Engine Runtime Date Area JNI Native method library 이 5개의 컴포넌트 중 JNI와 Native method library를 제외한 3가지 컴포넌트에 대해 정리하고자 한다.
Java Virtual Machine Architecture (이미지 출처: medium.</description></item></channel></rss>