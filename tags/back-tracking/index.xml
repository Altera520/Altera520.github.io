<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Back Tracking - Tag - Juneee blog</title><link>https://altera520.github.io/tags/back-tracking/</link><description>Back Tracking - Tag - Juneee blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 31 Dec 2020 11:27:53 +0900</lastBuildDate><atom:link href="https://altera520.github.io/tags/back-tracking/" rel="self" type="application/rss+xml"/><item><title>백트래킹 (Back Tracking)</title><link>https://altera520.github.io/posts/2020-12-31-back_tracking/</link><pubDate>Thu, 31 Dec 2020 11:27:53 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2020-12-31-back_tracking/</guid><description>백트래킹 일반적으로 DFS나 BFS를 사용하여 탐색을 수행하면 모든 노드들을 탐색한다. 모든 노드를 탐색해야만하는 상황이라면 이러한 완전탐색(Full-Access) 방법을 취하는 것은 적절하다. 하지만, 모든 노드 중 특정 조건이 성립하는 노드만을 탐색하길 원한다면 DFS나 BFS는 목표하지 않은 경로도 탐색하게되므로 비효율적인 결과를 발생시킬수 있다.
백트래킹을 적용하면 유망성 검사를 통해 모든 노드를 탐색하는 것이 아닌 조건에 부합하지 않는 노드들은 배제를 시킨다.</description></item></channel></rss>