<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Juneee blog</title><link>https://altera520.github.io/posts/</link><description>All Posts | Juneee blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 31 Dec 2020 11:27:53 +0900</lastBuildDate><atom:link href="https://altera520.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>백트래킹 (Back Tracking)</title><link>https://altera520.github.io/posts/2020-12-31-back_tracking/</link><pubDate>Thu, 31 Dec 2020 11:27:53 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2020-12-31-back_tracking/</guid><description>백트래킹 일반적으로 DFS나 BFS를 사용하여 탐색을 수행하면 모든 노드들을 탐색한다. 모든 노드를 탐색해야만하는 상황이라면 이러한 완전탐색(Full-Access) 방법을 취하는 것은 적절하다. 하지만, 모든 노드 중 특정 조건이 성립하는 노드만을 탐색하길 원한다면 DFS나 BFS는 목표하지 않은 경로도 탐색하게되므로 비효율적인 결과를 발생시킬수 있다.
백트래킹을 적용하면 유망성 검사를 통해 모든 노드를 탐색하는 것이 아닌 조건에 부합하지 않는 노드들은 배제를 시킨다.</description></item><item><title>[백준] 9466. 텀 프로젝트</title><link>https://altera520.github.io/posts/2020-12-29-b_9466/</link><pubDate>Tue, 29 Dec 2020 19:08:23 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2020-12-29-b_9466/</guid><description>문제 설명 문제 : 백준 9466번 - 텀 프로젝트
학생들은 프로젝트 팀을 구성하기 위해 프로젝트를 함께하고 싶은 1명의 학생을 선택해야한다. 자기자신을 선택하는 경우도 있다. (이 경우도 팀으로 간주)
학생들이$(s_1, s_2, &amp;hellip;, s_r)$이라 할 때, r=1이고 $s_1$이 $s_1$을 선택하는 경우나, $s_1$이 $s_2$를 선택하고, $s_2$가 $s_3$를 선택하고,&amp;hellip;, $s_{r-1}$이 $s_r$을 선택하고, $s_r$이 $s_1$을 선택하는 경우에만 한 팀이 될 수 있다.</description></item><item><title>[백준] 17472. 다리 만들기 2</title><link>https://altera520.github.io/posts/2020-12-29-b_17472/</link><pubDate>Tue, 29 Dec 2020 16:17:52 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2020-12-29-b_17472/</guid><description>문제 설명 문제 : 백준 17472번 - 다리 만들기 2
나라는 섬들로 이루어지고, 모든 섬을 다리로 연결하려고 한다. N×M 크기의 지도에서 1은 땅 0은 바다를 나타내며 섬은 연결된 땅이 상하좌우로 붙어있는 덩어리를 말한다. 섬과 섬간의 다리는 직선인 경우(가로, 세로)에만 성립하며 다리의 길이가 2이상 되어야한다.
모든 섬을 연결하는 다리 길이의 최솟값을 출력하며 모든 섬을 연결하는 것이 불가능한 경우에는 -1을 출력하도록 한다.</description></item><item><title>[백준] 8972. 미친 아두이노</title><link>https://altera520.github.io/posts/2020-12-28-b_8972/</link><pubDate>Mon, 28 Dec 2020 09:20:18 +0900</pubDate><author>Author</author><guid>https://altera520.github.io/posts/2020-12-28-b_8972/</guid><description>문제 설명 문제 : 백준 8972번 - 미친 아두이노
SWEA에 나올법한 구현 문제이다.
아래의 과정을 통해서 시뮬레이션한 결과를 출력하며, 미친 아두이노와 플레이어(종수)의 아두이노가 동일한 좌표에 위치하면 시뮬레이션을 종료시키고 &amp;ldquo;kraj X&amp;quot;라는 문자열을 출력한다. (X는 시뮬레이션이 종료된 단계)
먼저, 종수가 아두이노를 8가지 방향(수직,수평,대각선)으로 이동시키거나, 그 위치에 그대로 놔둔다. 종수의 아두이노가 미친 아두이노가 있는 칸으로 이동한 경우에는 게임이 끝나게 되며, 종수는 게임을 지게 된다.</description></item></channel></rss>